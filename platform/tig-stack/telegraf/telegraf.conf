# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"  # Maximum flush_interval will be flush_interval + flush_jitter
  flush_jitter = "0s"
  precision = "1ms"
  hostname = ""
  omit_hostname = false
  debug = true
  quiet = false
  logfile = ""


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################
# Configuration for sending metrics to InfluxDB 2.0
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]

  ## Organization is the name of the organization you wish to write to.
  organization = "shtuk-org"

  ## Timeout for HTTP messages.
  timeout = "5s"

  ## HTTP User-Agent
  user_agent = "telegraf"

  ## Content-Encoding for write request body, can be set to "gzip" to
  ## compress body or "identity" to apply no encoding.
  content_encoding = "gzip"

  ## Enable or disable uint support for writing uints influxdb 2.0.
  influx_uint_support = true

  ## Destination bucket to write into.
  bucket = "IoT-Clock-RoomMonitor"

  ## Additional HTTP headers
  # http_headers = {"X-Special-Header" = "Special-Value"}
  
  ## Token for authentication.
  token = "zD-MBy07RPDdhjF4uic3b8QZUBpE1mDd5IdHneciNmXnnR984JTtwVIWswVHbqIlv1n-UXu7ByhvTfTUFKOfRA=="

###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################

# # Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
  servers = ["tcp://192.168.0.124:1883"]

  topics = [
    "/IoT-Monitoring-System/#",
    "/IoT-Clock-RoomMonitor/DEVICE_OUT/DATA"
  ]

  topic_tag = "topic"

  qos = 2

  connection_timeout = "30s"

#   ## Maximum messages to read from the broker that have not been written by an
#   ## output.  For best throughput set based on the number of metrics within
#   ## each message and the size of the output's metric_batch_size.
#   ##
#   ## For example, if each message from the queue contains 10 metrics and the
#   ## output metric_batch_size is 1000, setting this to 100 will ensure that a
#   ## full batch is collected and the write is triggered immediately without
#   ## waiting until the next flush_interval.
#   # max_undelivered_messages = 1000

  persistent_session = true

  client_id = "telegraf-client"
  username = "telegraf1"
  password = "Test12345"

  data_format = "xpath_cbor"

  xpath_print_document = true
  xpath_native_types = true
  
[[inputs.mqtt_consumer.xpath]]
  metric_selection = "/data/sensor_data"
	
  timestamp = "timestamp"
  timestamp_format = "unix_us"

  field_selection  = "fields/*"
  field_name       = "name()"
  field_value      = "number(.)"

  [inputs.mqtt_consumer.xpath.tags]
    sensor   = "string(sensor)"
    deviceId = "string(/data/deviceId)"