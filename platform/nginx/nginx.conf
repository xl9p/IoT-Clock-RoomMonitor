user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  10240;
}

stream {
  upstream emqxtcp {
    server 192.168.0.123:1883 weight=2 max_fails=2;
    server 192.168.0.123:1884 weight=1 max_fails=2;
    server 192.168.0.123:1885 weight=1 max_fails=2;
  }

  upstream emqxtls {
    server 192.168.0.123:1883 weight=2 max_fails=2;
    server 192.168.0.123:1884 weight=1 max_fails=2;
    server 192.168.0.123:1885 weight=1 max_fails=2; 
  }

  server {
    listen 1883;
  
    proxy_pass emqxtcp;
  }

  server {
    listen 8883 ssl;

    #SSL certificates
    ssl_certificate /etc/nginx/certs/EMQX/server.crt;
    ssl_certificate_key /etc/nginx/certs/EMQX/server.key;
    ssl_client_certificate /etc/nginx/certs/EMQX/rootCA.pem;
    ssl_verify_client off;
    ssl_verify_depth 0;
    ssl_handshake_timeout 15s;

    proxy_pass emqxtls;
    proxy_buffer_size 4k;
  }

  server {
    listen 8884 ssl;

    #SSL certificates
    ssl_certificate /etc/nginx/certs/EMQX/server.crt;
    ssl_certificate_key /etc/nginx/certs/EMQX/server.key;
    ssl_client_certificate /etc/nginx/certs/EMQX/rootCA.pem;
    ssl_verify_client optional;
    ssl_verify_depth 0;
    ssl_handshake_timeout 15s;

    proxy_pass emqxtls;
    proxy_buffer_size 4k;
  }
}

#http {
  # Nginx status
 # server {
  #  listen 8888;
    
  #  location /status {            
  #    stub_status on;
  #    access_log off;
  #  }
  #}

  #upstream emqxws {
  #  server emqx1-cluster.emqx.io:8083;
  #  server emqx2-cluster.emqx.io:8083;
  #  server emqx3-cluster.emqx.io:8083;
  #}
  
  # ws
  #server {
   # listen 8083;

   # location /mqtt {
   #     proxy_pass http://emqxws;

   #     proxy_set_header Upgrade $http_upgrade;
   #     proxy_set_header Connection "Upgrade";
   #     proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header REMOTE-HOST $remote_addr;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   #     proxy_buffering off;
   # }
  #}

  # wss
  #server {
  #  listen 8084 ssl;

    #SSL certificates
  #  ssl_certificate /etc/nginx/certs/cert.pem;
  #  ssl_certificate_key /etc/nginx/certs/key.pem;

   # location /mqtt {
    #    proxy_pass http://emqxws;

        # WebSocket Connection Upgrade must be set to "WebSocket," indicating that after receiving a server response, the HTTP protocol is transformed (upgraded) to the WebSocket protocol.
    #    proxy_set_header Upgrade $http_upgrade;

        # WebSocket Connection header must be set to "Upgrade," indicating that the client wishes to upgrade the connection.            
    #    proxy_set_header Connection "Upgrade";

        # Proxy Real IP
   #     proxy_set_header Host $host;
   #     proxy_set_header X-Real-IP $remote_addr;
   #     proxy_set_header REMOTE-HOST $remote_addr;
   #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #    proxy_buffering off;
    #}
  #}
#}